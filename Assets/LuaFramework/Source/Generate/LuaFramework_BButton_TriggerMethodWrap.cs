//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaFramework_BButton_TriggerMethodWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(LuaFramework.BButton.TriggerMethod));
		L.RegVar("Up", get_Up, null);
		L.RegVar("Down", get_Down, null);
		L.RegVar("Double", get_Double, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<LuaFramework.BButton.TriggerMethod>.Check = CheckType;
		StackTraits<LuaFramework.BButton.TriggerMethod>.Push = Push;
	}

	static void Push(IntPtr L, LuaFramework.BButton.TriggerMethod arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(LuaFramework.BButton.TriggerMethod), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Up(IntPtr L)
	{
		ToLua.Push(L, LuaFramework.BButton.TriggerMethod.Up);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Down(IntPtr L)
	{
		ToLua.Push(L, LuaFramework.BButton.TriggerMethod.Down);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Double(IntPtr L)
	{
		ToLua.Push(L, LuaFramework.BButton.TriggerMethod.Double);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		LuaFramework.BButton.TriggerMethod o = (LuaFramework.BButton.TriggerMethod)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

