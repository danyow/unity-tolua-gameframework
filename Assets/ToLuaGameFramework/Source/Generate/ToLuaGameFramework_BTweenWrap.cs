//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ToLuaGameFramework_BTweenWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ToLuaGameFramework.BTween), typeof(System.Object));
		L.RegFunction("Parabola", Parabola);
		L.RegFunction("StopParabola", StopParabola);
		L.RegFunction("Swing", Swing);
		L.RegFunction("StopSwing", StopSwing);
		L.RegFunction("Value", Value);
		L.RegFunction("Linear", Linear);
		L.RegFunction("Ease", Ease);
		L.RegFunction("New", _CreateToLuaGameFramework_BTween);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateToLuaGameFramework_BTween(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				ToLuaGameFramework.BTween obj = new ToLuaGameFramework.BTween();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: ToLuaGameFramework.BTween.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Parabola(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				ToLuaGameFramework.BTween.Parabola(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				ToLuaGameFramework.BTween.Parabola(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				float arg6 = (float)LuaDLL.luaL_checknumber(L, 7);
				ToLuaGameFramework.BTween.Parabola(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<System.Action>(L, 8))
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				float arg6 = (float)LuaDLL.luaL_checknumber(L, 7);
				System.Action arg7 = (System.Action)ToLua.ToObject(L, 8);
				ToLuaGameFramework.BTween.Parabola(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes<ToLuaGameFramework.TweenEvent>(L, 8))
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				float arg6 = (float)LuaDLL.luaL_checknumber(L, 7);
				ToLuaGameFramework.TweenEvent arg7 = (ToLuaGameFramework.TweenEvent)ToLua.ToObject(L, 8);
				ToLuaGameFramework.BTween.Parabola(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<System.Action, System.Action>(L, 8))
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				float arg6 = (float)LuaDLL.luaL_checknumber(L, 7);
				System.Action arg7 = (System.Action)ToLua.ToObject(L, 8);
				System.Action arg8 = (System.Action)ToLua.ToObject(L, 9);
				ToLuaGameFramework.BTween.Parabola(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes<ToLuaGameFramework.TweenEvent, ToLuaGameFramework.TweenEvent>(L, 8))
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				float arg6 = (float)LuaDLL.luaL_checknumber(L, 7);
				ToLuaGameFramework.TweenEvent arg7 = (ToLuaGameFramework.TweenEvent)ToLua.ToObject(L, 8);
				ToLuaGameFramework.TweenEvent arg8 = (ToLuaGameFramework.TweenEvent)ToLua.ToObject(L, 9);
				ToLuaGameFramework.BTween.Parabola(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 11)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				float arg6 = (float)LuaDLL.luaL_checknumber(L, 7);
				System.Action arg7 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 8);
				ToLuaGameFramework.TweenEvent arg8 = (ToLuaGameFramework.TweenEvent)ToLua.CheckDelegate<ToLuaGameFramework.TweenEvent>(L, 9);
				System.Action arg9 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 10);
				ToLuaGameFramework.TweenEvent arg10 = (ToLuaGameFramework.TweenEvent)ToLua.CheckDelegate<ToLuaGameFramework.TweenEvent>(L, 11);
				ToLuaGameFramework.BTween.Parabola(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ToLuaGameFramework.BTween.Parabola");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopParabola(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 1);
			ToLuaGameFramework.BTween.StopParabola(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Swing(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				ToLuaGameFramework.BTween.Swing(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<System.Action>(L, 7))
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				System.Action arg6 = (System.Action)ToLua.ToObject(L, 7);
				ToLuaGameFramework.BTween.Swing(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<ToLuaGameFramework.TweenEvent>(L, 7))
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				ToLuaGameFramework.TweenEvent arg6 = (ToLuaGameFramework.TweenEvent)ToLua.ToObject(L, 7);
				ToLuaGameFramework.BTween.Swing(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				System.Action arg6 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 7);
				ToLuaGameFramework.TweenEvent arg7 = (ToLuaGameFramework.TweenEvent)ToLua.CheckDelegate<ToLuaGameFramework.TweenEvent>(L, 8);
				ToLuaGameFramework.BTween.Swing(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ToLuaGameFramework.BTween.Swing");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopSwing(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 1);
			ToLuaGameFramework.BTween.StopSwing(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Value(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				ToLuaGameFramework.BTween.BEaseType arg4 = (ToLuaGameFramework.BTween.BEaseType)ToLua.CheckObject(L, 5, typeof(ToLuaGameFramework.BTween.BEaseType));
				System.Action<float> arg5 = (System.Action<float>)ToLua.CheckDelegate<System.Action<float>>(L, 6);
				ToLuaGameFramework.ValueUpdate o = ToLuaGameFramework.BTween.Value(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 7)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				ToLuaGameFramework.BTween.BEaseType arg4 = (ToLuaGameFramework.BTween.BEaseType)ToLua.CheckObject(L, 5, typeof(ToLuaGameFramework.BTween.BEaseType));
				System.Action<float> arg5 = (System.Action<float>)ToLua.CheckDelegate<System.Action<float>>(L, 6);
				System.Action arg6 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 7);
				ToLuaGameFramework.ValueUpdate o = ToLuaGameFramework.BTween.Value(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ToLuaGameFramework.BTween.Value");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Linear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			ToLuaGameFramework.BTween obj = (ToLuaGameFramework.BTween)ToLua.CheckObject<ToLuaGameFramework.BTween>(L, 1);
			double arg0 = (double)LuaDLL.luaL_checknumber(L, 2);
			double arg1 = (double)LuaDLL.luaL_checknumber(L, 3);
			double arg2 = (double)LuaDLL.luaL_checknumber(L, 4);
			double arg3 = (double)LuaDLL.luaL_checknumber(L, 5);
			double o = obj.Linear(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Ease(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			ToLuaGameFramework.BTween obj = (ToLuaGameFramework.BTween)ToLua.CheckObject<ToLuaGameFramework.BTween>(L, 1);
			double arg0 = (double)LuaDLL.luaL_checknumber(L, 2);
			double arg1 = (double)LuaDLL.luaL_checknumber(L, 3);
			double arg2 = (double)LuaDLL.luaL_checknumber(L, 4);
			double arg3 = (double)LuaDLL.luaL_checknumber(L, 5);
			double o = obj.Ease(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

