//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ToLuaGameFramework_UIManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ToLuaGameFramework.UIManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("ExeCommand", ExeCommand);
		L.RegFunction("SpawnUI", SpawnUI);
		L.RegFunction("SpawnUIAsyn", SpawnUIAsyn);
		L.RegFunction("ResumeUI", ResumeUI);
		L.RegFunction("ClearAllUI", ClearAllUI);
		L.RegFunction("OnUIDestroy", OnUIDestroy);
		L.RegFunction("RefreshStack", RefreshStack);
		L.RegFunction("RefreshSortObjects", RefreshSortObjects);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("instance", get_instance, set_instance);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExeCommand(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ToLuaGameFramework.UIManager obj = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 1);
			ToLuaGameFramework.CommandEnum arg0 = (ToLuaGameFramework.CommandEnum)ToLua.CheckObject(L, 2, typeof(ToLuaGameFramework.CommandEnum));
			bool o = obj.ExeCommand(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SpawnUI(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				UnityEngine.GameObject o = ToLuaGameFramework.UIManager.SpawnUI(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				UnityEngine.GameObject o = ToLuaGameFramework.UIManager.SpawnUI(arg0, arg1, arg2);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 4)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
				UnityEngine.GameObject o = ToLuaGameFramework.UIManager.SpawnUI(arg0, arg1, arg2, arg3);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 5)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 5);
				UnityEngine.GameObject o = ToLuaGameFramework.UIManager.SpawnUI(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 6)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				UnityEngine.GameObject o = ToLuaGameFramework.UIManager.SpawnUI(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 7)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 5);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 6);
				bool arg6 = LuaDLL.luaL_checkboolean(L, 7);
				UnityEngine.GameObject o = ToLuaGameFramework.UIManager.SpawnUI(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ToLuaGameFramework.UIManager.SpawnUI");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SpawnUIAsyn(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				ToLuaGameFramework.UIManager obj = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				obj.SpawnUIAsyn(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				ToLuaGameFramework.UIManager obj = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				obj.SpawnUIAsyn(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6)
			{
				ToLuaGameFramework.UIManager obj = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
				obj.SpawnUIAsyn(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7)
			{
				ToLuaGameFramework.UIManager obj = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 7);
				obj.SpawnUIAsyn(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 8)
			{
				ToLuaGameFramework.UIManager obj = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 7);
				bool arg6 = LuaDLL.luaL_checkboolean(L, 8);
				obj.SpawnUIAsyn(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 9)
			{
				ToLuaGameFramework.UIManager obj = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
				bool arg5 = LuaDLL.luaL_checkboolean(L, 7);
				bool arg6 = LuaDLL.luaL_checkboolean(L, 8);
				bool arg7 = LuaDLL.luaL_checkboolean(L, 9);
				obj.SpawnUIAsyn(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ToLuaGameFramework.UIManager.SpawnUIAsyn");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResumeUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ToLuaGameFramework.UIManager obj = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.ResumeUI(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAllUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ToLuaGameFramework.UIManager obj = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 1);
			obj.ClearAllUI();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUIDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ToLuaGameFramework.UIManager obj = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 1);
			ToLuaGameFramework.LuaBehaviour arg0 = (ToLuaGameFramework.LuaBehaviour)ToLua.CheckObject<ToLuaGameFramework.LuaBehaviour>(L, 2);
			obj.OnUIDestroy(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshStack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			ToLuaGameFramework.UIManager.RefreshStack();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshSortObjects(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 1);
			ToLuaGameFramework.UIManager.RefreshSortObjects(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, ToLuaGameFramework.UIManager.instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_instance(IntPtr L)
	{
		try
		{
			ToLuaGameFramework.UIManager arg0 = (ToLuaGameFramework.UIManager)ToLua.CheckObject<ToLuaGameFramework.UIManager>(L, 2);
			ToLuaGameFramework.UIManager.instance = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

