//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ToLuaUIFramework_EventManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ToLuaUIFramework.MessageManager), typeof(System.Object));
		L.RegFunction("Add", Add);
		L.RegFunction("Remove", Remove);
		L.RegFunction("Clear", Clear);
		L.RegFunction("ClearAll", ClearAll);
		L.RegFunction("Emit", Emit);
		L.RegFunction("New", _CreateToLuaUIFramework_EventManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateToLuaUIFramework_EventManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				ToLuaUIFramework.MessageManager obj = new ToLuaUIFramework.MessageManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: ToLuaUIFramework.EventManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ToLuaUIFramework.MsgEnum arg0 = (ToLuaUIFramework.MsgEnum)ToLua.CheckObject(L, 1, typeof(ToLuaUIFramework.MsgEnum));
			System.Action<ToLuaUIFramework.BaseMsg> arg1 = (System.Action<ToLuaUIFramework.BaseMsg>)ToLua.CheckDelegate<System.Action<ToLuaUIFramework.BaseMsg>>(L, 2);
			ToLuaUIFramework.MessageManager.Add(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Remove(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ToLuaUIFramework.MsgEnum arg0 = (ToLuaUIFramework.MsgEnum)ToLua.CheckObject(L, 1, typeof(ToLuaUIFramework.MsgEnum));
			System.Action<ToLuaUIFramework.BaseMsg> arg1 = (System.Action<ToLuaUIFramework.BaseMsg>)ToLua.CheckDelegate<System.Action<ToLuaUIFramework.BaseMsg>>(L, 2);
			ToLuaUIFramework.MessageManager.Remove(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ToLuaUIFramework.MsgEnum arg0 = (ToLuaUIFramework.MsgEnum)ToLua.CheckObject(L, 1, typeof(ToLuaUIFramework.MsgEnum));
			ToLuaUIFramework.MessageManager.Clear(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			ToLuaUIFramework.MessageManager.ClearAll();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Emit(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<ToLuaUIFramework.BaseMsg>(L, 2))
			{
				ToLuaUIFramework.MsgEnum arg0 = (ToLuaUIFramework.MsgEnum)ToLua.CheckObject(L, 1, typeof(ToLuaUIFramework.MsgEnum));
				ToLuaUIFramework.BaseMsg arg1 = (ToLuaUIFramework.BaseMsg)ToLua.ToObject(L, 2);
				ToLuaUIFramework.MessageManager.Dispatch(arg0, arg1);
				return 0;
			}
			else if (TypeChecker.CheckTypes<ToLuaUIFramework.MsgEnum>(L, 1) && TypeChecker.CheckParamsType<object>(L, 2, count - 1))
			{
				ToLuaUIFramework.MsgEnum arg0 = (ToLuaUIFramework.MsgEnum)ToLua.CheckObject(L, 1, typeof(ToLuaUIFramework.MsgEnum));
				object[] arg1 = ToLua.ToParamsObject(L, 2, count - 1);
				ToLuaUIFramework.MessageManager.Dispatch(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ToLuaUIFramework.EventManager.Emit");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

